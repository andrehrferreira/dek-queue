{"version":3,"sources":["../src/index.js"],"names":["Queue","name","timeout","timer","block","queue","data","push","cb","setInterval","length","key","shift","Date","getTime","Queues","queues","$","set"],"mappings":";;;;;;;;;;AAAA;;;;;;IAEMA,K;AACF,mBAAYC,IAAZ,EAAkB;AAAA;;AACd,aAAKA,IAAL,GAAYA,IAAZ;AACA,aAAKC,OAAL,GAAe,IAAf;AACA,aAAKC,KAAL,GAAa,IAAb;AACA,aAAKC,KAAL,GAAa,CAAb;AACA,aAAKC,KAAL,GAAa,EAAb;AACH;;;;6BAEIC,I,EAAK;AACN,iBAAKD,KAAL,CAAWE,IAAX,CAAgBD,IAAhB;AACH;;;mCAEUH,K,EAAM;AACb,gBAAG,OAAOA,KAAP,IAAgB,QAAnB,EACI,KAAKD,OAAL,GAAeC,KAAf;AACP;;;iCAEQC,K,EAAM;AACX,gBAAG,OAAOA,KAAP,IAAgB,QAAnB,EACI,KAAKA,KAAL,GAAaA,KAAb;AACP;;;kCAESI,E,EAAG;AAAA;;AACT,iBAAKL,KAAL,GAAaM,oEAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAClB,MAAKJ,KAAL,CAAWK,MAAX,GAAoB,CADF;AAAA;AAAA;AAAA;;AAEbJ,oCAFa,GAEN,EAFM;AAITK,mCAJS,GAIH,CAJG;;AAAA;AAAA,sCAIAA,MAAM,MAAKP,KAJX;AAAA;AAAA;AAAA;;AAAA,sCAKV,MAAKC,KAAL,CAAWK,MAAX,GAAoB,CALV;AAAA;AAAA;AAAA;;AAMTJ,qCAAKC,IAAL,CAAU,MAAKF,KAAL,CAAW,CAAX,CAAV;AACA,sCAAKA,KAAL,CAAWO,KAAX;AAPS;AAAA;;AAAA;AAAA;;AAAA;AAIkBD,qCAJlB;AAAA;AAAA;;AAAA;;AAcjB,oCAAGL,KAAKI,MAAL,GAAc,CAAjB,EACIF,GAAGF,IAAH,EAAS,MAAKD,KAAL,CAAWK,MAApB,EAA4B,IAAIG,IAAJ,GAAWC,OAAX,EAA5B;;AAfa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAZ,IAiBV,KAAKZ,OAjBK,CAAb;AAkBH;;;;;;IAGCa,M;AACF,sBAAc;AAAA;;AACV,aAAKC,MAAL,GAAc,EAAd;AACH;;;;kCAESf,I,EAAK;AACX,gBAAG,QAAO,KAAKe,MAAL,CAAYf,IAAZ,CAAP,MAA6B,QAAhC,EACI,KAAKe,MAAL,CAAYf,IAAZ,IAAoB,IAAID,KAAJ,CAAUC,IAAV,CAApB;;AAEJ,mBAAO,KAAKe,MAAL,CAAYf,IAAZ,CAAP;AACH;;;;;;kBAGU,YAAM;AACjBgB,aAAEC,GAAF,CAAM,OAAN,EAAe,IAAIH,MAAJ,EAAf;AACH,C","file":"index.js","sourcesContent":["import { $ } from \"@dekproject/scope\";\n\nclass Queue {\n    constructor(name) {\n        this.name = name;\n        this.timeout = 1000;\n        this.timer = null;\n        this.block = 1;\n        this.queue = [];\n    }\n\n    push(data){\n        this.queue.push(data);\n    }\n\n    setTimeout(timer){\n        if(typeof timer == \"number\")\n            this.timeout = timer;\n    }\n\n    setBlock(block){\n        if(typeof block == \"number\")\n            this.block = block;\n    }\n\n    setParser(cb){\n        this.timer = setInterval(async () => {\n            if(this.queue.length > 0){\n                let data = [];\n\n                for(let key = 0; key < this.block; key++){\n                    if(this.queue.length > 0){\n                        data.push(this.queue[0]);\n                        this.queue.shift();\n                    }\n                    else{\n                        break;\n                    }\n                }\n\n                if(data.length > 0)\n                    cb(data, this.queue.length, new Date().getTime());\n            }\n        }, this.timeout);\n    }\n}\n\nclass Queues{\n    constructor() {\n        this.queues = {};\n    }\n\n    subscribe(name){\n        if(typeof this.queues[name] !== \"object\")\n            this.queues[name] = new Queue(name);\n\n        return this.queues[name];\n    }\n}\n\nexport default () => {\n    $.set(\"queue\", new Queues());\n}\n"]}